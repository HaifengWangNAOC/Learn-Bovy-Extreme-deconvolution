\name{ExtremeDeconvolution}
\alias{ExtremeDeconvolution}
\title{The extreme-deconvolution library}
\description{}

\usage{
extreme_deconvolution(ydata,ycovar,
                      xamp,xmean,xcovar,
                      projection=NULL,
                      weight=NULL,
                      fixamp=NULL,fixmean=NULL,fixcovar=NULL,
                      tol=1.e-6,maxiter=1e9,w=0,logfile=NULL,
                      splitnmerge=0,maxsnm=FALSE,likeonly=FALSE,
                      logweight=FALSE)
}

\arguments{
  ...
}

\value{
  ...
}

\details{
  ...
}

\author{Jo Bovy, David W. Hogg, & Sam T. Roweis}

\references{
Inferring complete distribution functions from
noisy, heterogeneous and incomplete observations Jo Bovy, David
W. Hogg, & Sam T. Roweis, Submitted to AOAS (2009) [arXiv/0905.2979]
}

\examples{
# Load the package
library("ExtremeDeconvolution")
?extreme_deconvolution
ydata <- c(2.624345,0.3882436,0.4718282,-0.07296862,1.865408,-1.301539,2.744812,0.2387931,1.319039,0.7506296,2.462108,-1.060141,0.6775828,0.6159456,2.133769,-0.09989127,0.8275718,0.1221416,1.042214,1.582815,-0.1006192,2.144724,1.901591,1.502494,1.900856,0.3162721,0.8771098,0.06423057,0.7321119,1.530355,0.3083392,0.6032465,0.3128273,0.1547944,0.3287539,0.9873354,-0.1173103,1.234416,2.659802,1.742044,0.8081644,0.112371,0.2528417,2.692455,1.050808,0.3630044,1.190915,3.100255,1.120159,1.617203,1.30017,0.6477502,-0.1425182,0.6506573,0.7911058,1.586623,1.838983,1.931102,1.285587,1.885141,0.2456021,2.252868,1.51293,0.7019072,1.488518,0.9244283,2.131629,2.519817,3.185575,-0.3964963,-0.4441138,0.4955341,1.160037,1.876169,1.315635,-1.022201,0.693796,1.827975,1.230095,1.762011,0.7776719,0.7992419,1.186561,1.410052,1.1983,1.119009,0.3293377,1.377564,1.121821,2.129484,2.198918,1.185156,0.6247151,0.3612696,1.423494,1.07734,0.6561463,1.043597,0.3799992,1.698032,0.5528714,2.224508,1.403492,1.593579,-0.09491185,1.169382,1.740556,0.0462994,0.7337815,1.032615,-0.3731173,1.315159,1.846161,0.1404841,1.350546,-0.3122834,0.9613045,-0.6157724,2.121418,1.408901,0.975383,0.2248384,2.273756,2.967102,-0.8579819,2.236164,2.627651,1.338012,-0.199268,1.863345,0.8190797,0.3960794,-0.2300581,1.550537,1.792807,0.3764693,1.520576,-0.1443414,1.801861,1.046567,0.8134302,0.8982541,1.868886,1.750412,1.529465,1.137701,1.077821,1.61838,1.232495,1.682551,0.6898832,-1.434838,2.038825,3.18698,1.441364,0.8998448,0.8635553,0.8809458,1.017409,-0.1220187,0.4829055,0.002973172,1.248799,0.7033588,1.495211,0.8252968,1.986335,1.213534,3.1907,-0.8963609,0.3530833,1.901487,3.528326,0.7513652,1.043669,0.7736858,2.331457,0.7126921,1.68007,0.6801984,-0.2725588,1.313548,1.503185,2.293226,0.889553,0.3826379,1.562761,1.240737,1.280665,0.9268873,2.160339,1.369493,2.904659,2.111057,1.65905,-0.6274383,1.602319,1.420282,1.810952,2.044442)
ydata <- array(ydata, c(length(ydata), 1))
N <- dim(ydata)[1]
ycovar <- ydata * 0 + 0.01
xamp <- c(0.5, 0.5)
xmean <- t(array(c(0.86447943, 0.67078879, 0.322681, 0.45087394), c(2, 2)))
xcovar <- c(array(c(0.03821028, 0.04014796, 0.04108113, 0.03173839), c(2,2)), array(c(0.06219194,0.09738021, 0.04302473, 0.06778009), c(2,2)))
projection <- array(rep(NA, N * 2), c(N, 1, 2))
for (i in 1:N) if (i \%\% 2) projection[i,,] = c(0,1) else projection[i,,] = c(1,0)
result <- extreme_deconvolution(ydata,ycovar,xamp,xmean,xcovar,projection=projection)
print(result)
}